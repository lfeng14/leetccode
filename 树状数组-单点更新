// https://www.luogu.com.cn/problem/P3374

#include <iostream>
#include <queue>
#include <algorithm>
#include <cstring>
using namespace std;

class fentree {
// 也可以直接写long long m_tree[500001];
	vector<long long> m_tree; 
public:
	fentree(int n) : m_tree(n + 1, 0) {
	};
	void update(int i, int v) {
   // 注意这里是n + 1大小，所以小于号
		while (i < m_tree.size()) {
			m_tree[i] += v;
			i += (-i) & i;
		}
	};
	long long query(int v) {
		long long sum = 0;
  // 树状数组必须从1开始
		while (v > 0) {
			sum += m_tree[v];
			v -= (-v) & v;
		}
		return sum;
	};

};
int main()
{
	//5 5
	//1 5 4 2 3
	//1 1 3
	//2 2 5
	//1 3 - 1
	//1 4 2
	//2 1 4
	int n, k;
	cin >> n >> k;
	fentree ft(n);
	for (int i = 1; i <= n; ++i) {
		int v;
		cin >> v;
		ft.update(i, v);
	}
	for (int i = 0; i < k; ++i) {
		int op;
		cin >> op;
		if (op == 1) {
			int x, addv;
			cin >> x >> addv;
			ft.update(x, addv);
		}
		else if (op == 2) {
			int l, r;
			cin >> l >> r;
			cout << ft.query(r) - ft.query(l - 1) << endl;
		}
	}
	return 0;
}

// https://www.lanqiao.cn/problems/269/learning/?page=1&first_category_id=1&name=%E6%8E%92%E5%88%97%E5%BA%8F%E6%95%B0

#include <iostream>
#include <string>
#include <algorithm>
#include <memory.h>
using namespace std;
#define maxn 100
int stk[maxn];
int targetidx = -1;
int cnt = 0;
bool visited[maxn];
string sortstr;
string targetstr;
void dfs(int curdepth, int maxdepth, string curstr) {
    if (targetidx != -1) {
       return;
    }
    if (curdepth == maxdepth) {
        if (curstr == targetstr) {
            targetidx = cnt;
        }
        cnt++;
        return;
    }
    for (int i = 0; i < maxdepth; ++i) {
        if (!visited[i]) {
            visited[i] = true;
            dfs(curdepth + 1, maxdepth, curstr + sortstr[i]);
            visited[i] = false;
        }

    }
}
int main()
{
    string s;
    cin >> s;
    targetstr = s;
    sort(s.begin(), s.end());
    sortstr = s;
    memset(visited, false, sizeof(visited));
    dfs(0, s.size(), "");
    cout << targetidx << endl;
    return 0;
}

https://leetcode.cn/problems/palindromic-substrings/description/

class Solution {
    int dp[1000][1000];
    int dfs(string& s, int i, int j) {
        if (i > j) {
            return 1;
        }
        if (dp[i][j] != -1) {
            return dp[i][j];
        } else {
            if (s[i] == s[j]) {
                // 这里存储计算过的结果
                dp[i][j] = dfs(s, i + 1, j - 1);
            } else {
                // 这里存储计算过的结果
                dp[i][j] = 0;
            }
        }
        return dp[i][j];
    }
public:
    int countSubstrings(string s) {
        int n = s.size();
        for (int i = 0; i < n; ++i) {
            for (int j = i; j < n; ++j) {
                if (i == j) {
                    dp[i][j] = 1;
                } else {
                    dp[i][j] = -1;
                }
            }
        }
        int ans = 0;
        for (int i = 0; i < n; ++i) {
            for (int j = i; j < n; ++j) {
                // 这里不感知
                if (dfs(s, i, j) == 1) {
                    ans ++;
                }
            }
        }
        return ans;
    }
};

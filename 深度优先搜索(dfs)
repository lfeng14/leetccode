https://www.lanqiao.cn/problems/1515/learning/?page=1&first_category_id=1&tags=%E9%AB%98%E7%B2%BE%E5%BA%A6&tag_relation=intersection&sort=students_count&asc=0

#include <iostream>
#include <vector>
using namespace std;

vector<vector<int>> edges(100001);
bool visited[100001] = { false };
void dfs(int from, int n) {
	for (int i = 0; i < edges[from].size(); ++i) {
		int to = edges[from][i];
		if (visited[to] == false) {
			visited[to] = true;
			dfs(to, n);
		}
	}
}

int main()
{
	int n, m;
	cin >> n >> m;
	
	for (int i = 0; i < m; i++) {
		int from, to;
		cin >> from >> to;
  // 双向
		edges[from].push_back(to);
		edges[to].push_back(from);
	}
	int ans = 0;
	
	for (int i = 1;i <= n; ++i) {
		if (visited[i] == false) {
			ans++;
			dfs(i, n);
		}
	}
	cout << ans - 1 << endl;
	return 0;
}

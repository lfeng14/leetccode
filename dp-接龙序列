// https://www.lanqiao.cn/problems/3512/learning/?page=1&first_category_id=1&name=%E6%8E%A5%E9%BE%99%E6%95%B0%E5%88%97

dp最难的是定义状态，状态转移

#include <iostream>
#include <cstring>
using namespace std;
int main()
{
  int n;
  cin >> n;
  int dp[10];
  memset(dp, 0, sizeof(dp));
  // dp[i] 表示i结尾的数字 xyzi
  int maxv = -1;
  for (int i = 0; i < n; ++i) {
    int v;
    cin >> v;
    int l = v;
    int r = v % 10;
    while (l >= 10) {
      l = l / 10;
    }
    // cout << l << " ";
    dp[r] = max(dp[l] + 1, dp[r]);
    maxv = max(maxv, dp[r]);
  }
  cout <<  n - maxv << endl;
  return 0;
}
